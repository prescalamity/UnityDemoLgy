////this source code was auto-generated by tolua#, do not modify it
//using System;
//using LuaInterface;
//using UnityEngine;

//public class Spine_Unity_SkeletonAnimationWrap
//{
//	public static void Register(LuaState L)
//	{
//        L.BeginClass(typeof(Spine.Unity.SkeletonAnimation), typeof(Spine.Unity.SkeletonRenderer), "SkeletonAnimation");
//        L.RegFunction("AddToGameObject", AddToGameObject);
//        L.RegFunction("NewSkeletonAnimationGameObject", NewSkeletonAnimationGameObject);
//        L.RegFunction("ClearState", ClearState);
//        L.RegFunction("Initialize", Initialize);
//        L.RegFunction("Update", Update);
//        L.RegFunction("__eq", op_Equality);
//        L.RegFunction("__tostring", Lua_ToString);
//        L.RegVar("state", get_state, set_state);
//        L.RegVar("loop", get_loop, set_loop);
//        L.RegVar("timeScale", get_timeScale, set_timeScale);
//        L.RegVar("AnimationState", get_AnimationState, null);
//		L.RegVar("AnimationEvent", null, set_AnimationEvent);
//		L.RegVar("AnimationName", get_AnimationName, set_AnimationName);
//        L.RegVar("UpdateLocal", get_UpdateLocal, set_UpdateLocal);
//        L.RegVar("UpdateWorld", get_UpdateWorld, set_UpdateWorld);
//        L.RegVar("UpdateComplete", get_UpdateComplete, set_UpdateComplete);
//        L.RegFunction("GetClassType", GetClassType);
//        L.EndClass();
//    }

//	static Type classType = typeof(Spine.Unity.SkeletonAnimation);

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int GetClassType(IntPtr L)
//	{
//		ToLua.Push(L, classType);
//		return 1;
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int AddToGameObject(IntPtr L)
//	{
//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.AddToGameObject");
//#endif
//			ToLua.CheckArgsCount(L, 2);
//			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.GameObject));
//			Spine.Unity.SkeletonDataAsset arg1 = (Spine.Unity.SkeletonDataAsset)ToLua.CheckUnityObject(L, 2, typeof(Spine.Unity.SkeletonDataAsset));
//			Spine.Unity.SkeletonAnimation o = Spine.Unity.SkeletonAnimation.AddToGameObject(arg0, arg1);
//			ToLua.Push(L, o);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 1;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int NewSkeletonAnimationGameObject(IntPtr L)
//	{
//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.NewSkeletonAnimationGameObject");
//#endif
//			ToLua.CheckArgsCount(L, 1);
//			Spine.Unity.SkeletonDataAsset arg0 = (Spine.Unity.SkeletonDataAsset)ToLua.CheckUnityObject(L, 1, typeof(Spine.Unity.SkeletonDataAsset));
//			Spine.Unity.SkeletonAnimation o = Spine.Unity.SkeletonAnimation.NewSkeletonAnimationGameObject(arg0);
//			ToLua.Push(L, o);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 1;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int ClearState(IntPtr L)
//	{
//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.ClearState");
//#endif
//			ToLua.CheckArgsCount(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)ToLua.CheckObject(L, 1, typeof(Spine.Unity.SkeletonAnimation));
//			obj.ClearState();
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int Initialize(IntPtr L)
//	{
//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.Initialize");
//#endif
//			ToLua.CheckArgsCount(L, 2);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)ToLua.CheckObject(L, 1, typeof(Spine.Unity.SkeletonAnimation));
//			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
//			obj.Initialize(arg0);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int Update(IntPtr L)
//	{
//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.Update");
//#endif
//			ToLua.CheckArgsCount(L, 2);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)ToLua.CheckObject(L, 1, typeof(Spine.Unity.SkeletonAnimation));
//			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
//			obj.Update(arg0);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e);
//		}
//	}

//    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//    static int set_AnimationEvent(IntPtr L)
//    {
//        try
//        {
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//            UIProfiler.Begin("Spine.Unity.SkeletonAnimation.AnimationEvent");
//#endif
//			ToLua.CheckArgsCount(L, 2);
//			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)ToLua.CheckObject(L, 1, typeof(Spine.Unity.SkeletonAnimation));
//			obj.state.AnimationStart = () =>
//			{
//				if(arg0 != null)
//					arg0.Call(0);
//			};

//			//obj.state.AnimationEnd = () =>
//   //         {
//   //             if (arg0 != null)
//   //                 arg0.Call(1);
//   //         };

//            obj.state.AnimationComplete = () =>
//            {
//                if (arg0 != null)
//                    arg0.Call(1);
//            };
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//            UIProfiler.End();
//#endif
//            return 0;
//        }
//        catch (Exception e)
//        {
//            return LuaDLL.toluaL_exception(L, e);
//        }
//    }



//    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int op_Equality(IntPtr L)
//	{
//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.op_Equality");
//#endif
//			ToLua.CheckArgsCount(L, 2);
//			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
//			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
//			bool o = arg0 == arg1;
//			LuaDLL.lua_pushboolean(L, o);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 1;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int Lua_ToString(IntPtr L)
//	{
//		object obj = ToLua.ToObject(L, 1);

//		if (obj != null)
//		{
//			LuaDLL.lua_pushstring(L, obj.ToString());
//		}
//		else
//		{
//			LuaDLL.lua_pushnil(L);
//		}

//		return 1;
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int get_state(IntPtr L)
//	{
//		object o = null;

//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.state");
//#endif
//			o = ToLua.ToObject(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)o;
//			Spine.AnimationState ret = obj.state;
//			ToLua.PushObject(L, ret);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 1;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index state on a nil value" : e.Message);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int get_loop(IntPtr L)
//	{
//		object o = null;

//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.loop");
//#endif
//			o = ToLua.ToObject(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)o;
//			bool ret = obj.loop;
//			LuaDLL.lua_pushboolean(L, ret);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 1;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index loop on a nil value" : e.Message);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int get_timeScale(IntPtr L)
//	{
//		object o = null;

//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.timeScale");
//#endif
//			o = ToLua.ToObject(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)o;
//			float ret = obj.timeScale;
//			LuaDLL.lua_pushnumber(L, ret);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 1;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index timeScale on a nil value" : e.Message);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int get_AnimationState(IntPtr L)
//	{
//		object o = null;

//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.AnimationState");
//#endif
//			o = ToLua.ToObject(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)o;
//			Spine.AnimationState ret = obj.AnimationState;
//			ToLua.PushObject(L, ret);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 1;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AnimationState on a nil value" : e.Message);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int get_AnimationName(IntPtr L)
//	{
//		object o = null;

//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.AnimationName");
//#endif
//			o = ToLua.ToObject(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)o;
//			string ret = obj.AnimationName;
//			LuaDLL.lua_pushstring(L, ret);
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 1;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AnimationName on a nil value" : e.Message);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int get_UpdateLocal(IntPtr L)
//	{
//		ToLua.Push(L, new EventObject("Spine.Unity.SkeletonAnimation.UpdateLocal"));
//		return 1;
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int get_UpdateWorld(IntPtr L)
//	{
//		ToLua.Push(L, new EventObject("Spine.Unity.SkeletonAnimation.UpdateWorld"));
//		return 1;
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int get_UpdateComplete(IntPtr L)
//	{
//		ToLua.Push(L, new EventObject("Spine.Unity.SkeletonAnimation.UpdateComplete"));
//		return 1;
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int set_state(IntPtr L)
//	{
//		object o = null;

//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.state");
//#endif
//			o = ToLua.ToObject(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)o;
//			Spine.AnimationState arg0 = (Spine.AnimationState)ToLua.CheckObject(L, 2, typeof(Spine.AnimationState));
//			obj.state = arg0;
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index state on a nil value" : e.Message);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int set_loop(IntPtr L)
//	{
//		object o = null;

//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.loop");
//#endif
//			o = ToLua.ToObject(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)o;
//			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
//			obj.loop = arg0;
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index loop on a nil value" : e.Message);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int set_timeScale(IntPtr L)
//	{
//		object o = null;

//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.timeScale");
//#endif
//			o = ToLua.ToObject(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)o;
//			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
//			obj.timeScale = arg0;
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index timeScale on a nil value" : e.Message);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int set_AnimationName(IntPtr L)
//	{
//		object o = null;

//		try
//		{
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.Begin("Spine.Unity.SkeletonAnimation.AnimationName");
//#endif
//			o = ToLua.ToObject(L, 1);
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)o;
//			string arg0 = ToLua.CheckString(L, 2);
//			obj.AnimationName = arg0;
//#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
//			UIProfiler.End();
//#endif
//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AnimationName on a nil value" : e.Message);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int set_UpdateLocal(IntPtr L)
//	{
//		try
//		{
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)ToLua.CheckObject(L, 1, typeof(Spine.Unity.SkeletonAnimation));
//			EventObject arg0 = null;

//			if (LuaDLL.lua_isuserdata(L, 2) != 0)
//			{
//				arg0 = (EventObject)ToLua.ToObject(L, 2);
//			}
//			else
//			{
//				return LuaDLL.luaL_throw(L, "The event 'Spine.Unity.SkeletonAnimation.UpdateLocal' can only appear on the left hand side of += or -= when used outside of the type 'Spine.Unity.SkeletonAnimation'");
//			}

//			if (arg0.op == EventOp.Add)
//			{
//				Spine.Unity.UpdateBonesDelegate ev = (Spine.Unity.UpdateBonesDelegate)DelegateFactory.CreateDelegate(typeof(Spine.Unity.UpdateBonesDelegate), arg0.func);
//				obj.UpdateLocal += ev;
//			}
//			else if (arg0.op == EventOp.Sub)
//			{
//				Spine.Unity.UpdateBonesDelegate ev = (Spine.Unity.UpdateBonesDelegate)LuaMisc.GetEventHandler(obj, typeof(Spine.Unity.SkeletonAnimation), "UpdateLocal");
//				Delegate[] ds = ev.GetInvocationList();
//				LuaState state = LuaState.Get(L);

//				for (int i = 0; i < ds.Length; i++)
//				{
//					ev = (Spine.Unity.UpdateBonesDelegate)ds[i];
//					LuaDelegate ld = ev.Target as LuaDelegate;

//					if (ld != null && ld.func == arg0.func)
//					{
//						obj.UpdateLocal -= ev;
//						state.DelayDispose(ld.func);
//						break;
//					}
//				}

//				arg0.func.Dispose();
//			}

//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int set_UpdateWorld(IntPtr L)
//	{
//		try
//		{
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)ToLua.CheckObject(L, 1, typeof(Spine.Unity.SkeletonAnimation));
//			EventObject arg0 = null;

//			if (LuaDLL.lua_isuserdata(L, 2) != 0)
//			{
//				arg0 = (EventObject)ToLua.ToObject(L, 2);
//			}
//			else
//			{
//				return LuaDLL.luaL_throw(L, "The event 'Spine.Unity.SkeletonAnimation.UpdateWorld' can only appear on the left hand side of += or -= when used outside of the type 'Spine.Unity.SkeletonAnimation'");
//			}

//			if (arg0.op == EventOp.Add)
//			{
//				Spine.Unity.UpdateBonesDelegate ev = (Spine.Unity.UpdateBonesDelegate)DelegateFactory.CreateDelegate(typeof(Spine.Unity.UpdateBonesDelegate), arg0.func);
//				obj.UpdateWorld += ev;
//			}
//			else if (arg0.op == EventOp.Sub)
//			{
//				Spine.Unity.UpdateBonesDelegate ev = (Spine.Unity.UpdateBonesDelegate)LuaMisc.GetEventHandler(obj, typeof(Spine.Unity.SkeletonAnimation), "UpdateWorld");
//				Delegate[] ds = ev.GetInvocationList();
//				LuaState state = LuaState.Get(L);

//				for (int i = 0; i < ds.Length; i++)
//				{
//					ev = (Spine.Unity.UpdateBonesDelegate)ds[i];
//					LuaDelegate ld = ev.Target as LuaDelegate;

//					if (ld != null && ld.func == arg0.func)
//					{
//						obj.UpdateWorld -= ev;
//						state.DelayDispose(ld.func);
//						break;
//					}
//				}

//				arg0.func.Dispose();
//			}

//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e);
//		}
//	}

//	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
//	static int set_UpdateComplete(IntPtr L)
//	{
//		try
//		{
//			Spine.Unity.SkeletonAnimation obj = (Spine.Unity.SkeletonAnimation)ToLua.CheckObject(L, 1, typeof(Spine.Unity.SkeletonAnimation));
//			EventObject arg0 = null;

//			if (LuaDLL.lua_isuserdata(L, 2) != 0)
//			{
//				arg0 = (EventObject)ToLua.ToObject(L, 2);
//			}
//			else
//			{
//				return LuaDLL.luaL_throw(L, "The event 'Spine.Unity.SkeletonAnimation.UpdateComplete' can only appear on the left hand side of += or -= when used outside of the type 'Spine.Unity.SkeletonAnimation'");
//			}

//			if (arg0.op == EventOp.Add)
//			{
//				Spine.Unity.UpdateBonesDelegate ev = (Spine.Unity.UpdateBonesDelegate)DelegateFactory.CreateDelegate(typeof(Spine.Unity.UpdateBonesDelegate), arg0.func);
//				obj.UpdateComplete += ev;
//			}
//			else if (arg0.op == EventOp.Sub)
//			{
//				Spine.Unity.UpdateBonesDelegate ev = (Spine.Unity.UpdateBonesDelegate)LuaMisc.GetEventHandler(obj, typeof(Spine.Unity.SkeletonAnimation), "UpdateComplete");
//				Delegate[] ds = ev.GetInvocationList();
//				LuaState state = LuaState.Get(L);

//				for (int i = 0; i < ds.Length; i++)
//				{
//					ev = (Spine.Unity.UpdateBonesDelegate)ds[i];
//					LuaDelegate ld = ev.Target as LuaDelegate;

//					if (ld != null && ld.func == arg0.func)
//					{
//						obj.UpdateComplete -= ev;
//						state.DelayDispose(ld.func);
//						break;
//					}
//				}

//				arg0.func.Dispose();
//			}

//			return 0;
//		}
//		catch(Exception e)
//		{
//			return LuaDLL.toluaL_exception(L, e);
//		}
//	}
//}

