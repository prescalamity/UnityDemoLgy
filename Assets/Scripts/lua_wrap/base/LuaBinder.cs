//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using LuaInterface;

public static class LuaBinder
{

	public static void Bind(LuaState L)
	{
		L.BeginModule(null);

		MyRegister(L);

		L.BeginModule("UnityEngine");
		//UnityEngine_GameObjectWrap.Register(L);
		//UnityEngine_TransformWrap.Register(L);
		//UnityEngine_BehaviourWrap.Register(L);
		//UnityEngine_MonoBehaviourWrap.Register(L);
		//UnityEngine_ComponentWrap.Register(L);
		//UnityEngine_Texture2DWrap.Register(L);
		//UnityEngine_TextureWrap.Register(L);
		//UnityEngine_TimeWrap.Register(L);
		//UnityEngine_SystemInfoWrap.Register(L);
		//UnityEngine_RenderTextureWrap.Register(L);
		//UnityEngine_ApplicationWrap.Register(L);
		//UnityEngine_KeyframeWrap.Register(L);
		//UnityEngine_AnimationCurveWrap.Register(L);
		//UnityEngine_RenderSettingsWrap.Register(L);
		//UnityEngine_QualitySettingsWrap.Register(L);
		//UnityEngine_LightWrap.Register(L);
		//UnityEngine_RigidbodyWrap.Register(L);
		//UnityEngine_AnimationWrap.Register(L);
		//UnityEngine_AnimationClipWrap.Register(L);
		//UnityEngine_AnimatorWrap.Register(L);
		//UnityEngine_RuntimeAnimatorControllerWrap.Register(L);
		//UnityEngine_MeshFilterWrap.Register(L);
		//UnityEngine_CameraWrap.Register(L);
		//UnityEngine_ScreenWrap.Register(L);
		//UnityEngine_AudioSourceWrap.Register(L);
		//UnityEngine_AudioClipWrap.Register(L);
		//UnityEngine_ShaderWrap.Register(L);
		//UnityEngine_MaterialWrap.Register(L);
		//UnityEngine_ColliderWrap.Register(L);
		//UnityEngine_BoxColliderWrap.Register(L);
		//UnityEngine_Matrix4x4Wrap.Register(L);
		//UnityEngine_RendererWrap.Register(L);
		//UnityEngine_MeshRendererWrap.Register(L);
		//UnityEngine_RectWrap.Register(L);
		//UnityEngine_MeshColliderWrap.Register(L);
		//UnityEngine_ParticleSystemWrap.Register(L);
		//UnityEngine_AudioBehaviourWrap.Register(L);
		L.EndModule();

		L.EndModule();
	}

	/// <summary>
	/// 测试注册给lua调用 类和函数，Debug.Log
	/// </summary>
	/// <param name="L"></param>
	public static void MyRegister(LuaState L)
	{
		L.BeginClass(typeof(Debug), typeof(System.Object), "Debug");

		L.RegFunction("Log", LuaLog);
		L.RegFunction("LogToUI", LogToUI);

		L.EndClass();


		L.BeginClass(typeof(PlatformAdapter), typeof(System.Object), "PlatformAdapter");

		L.RegFunction("CallPlatformFunc", CallPlatformFunc);

		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaLog(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg1 = ToLua.CheckString(L, 1);
			DLog.Log(arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LogToUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg1 = ToLua.CheckString(L, 1);
			DLog.LogToUI(arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}

	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CallPlatformFunc(IntPtr L)
    {
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			string arg2 = ToLua.CheckString(L, 3);
			string o = PlatformAdapter.CallPlatformFunc(arg0, arg1, arg2);
			LuaDLL.lua_pushstring(L, o);

			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}


}

