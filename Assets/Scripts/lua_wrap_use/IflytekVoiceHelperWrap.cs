//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class IflytekVoiceHelperWrap
{
    public static void Register(LuaState L)
    {
        L.BeginClass(typeof(IflytekVoiceHelper), typeof(Singleton<IflytekVoiceHelper>), "IflytekVoiceHelper");
        L.RegFunction("GetInstance", GetInstance);
        L.RegFunction("Init", Init);
        L.RegFunction("VoiceSetPath", VoiceSetPath);
        L.RegFunction("GetDevices", GetDevices);
        L.RegFunction("VoiceStart", VoiceStart);
        L.RegFunction("Reset", Reset);
        L.RegFunction("VoiceStop", VoiceStop);
        L.RegFunction("New", _CreateIflytekVoiceHelper);
        L.RegFunction("__tostring", Lua_ToString);
        L.RegVar("Frequency", get_Frequency, set_Frequency);
        L.RegVar("RecordTime", get_RecordTime, set_RecordTime);
        L.RegVar("IsRecording", get_IsRecording, null);
        L.RegVar("EnterRecord", get_EnterRecord, null);
        L.RegFunction("GetClassType", GetClassType);
        L.EndClass();
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int _CreateIflytekVoiceHelper(IntPtr L)
    {
        try
        {
            int count = LuaDLL.lua_gettop(L);

            if (count == 0)
            {
                IflytekVoiceHelper obj = new IflytekVoiceHelper();
                ToLua.PushObject(L, obj);
                return 1;
            }
            else
            {
                return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: IflytekVoiceHelper.New");
            }
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e);
        }
    }

    static Type classType = typeof(IflytekVoiceHelper);

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int GetClassType(IntPtr L)
    {
        ToLua.Push(L, classType);
        return 1;
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int GetInstance(IntPtr L)
    {
        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.GetInstance");
#endif
            ToLua.CheckArgsCount(L, 0);
            IflytekVoiceHelper o = IflytekVoiceHelper.GetInstance();
            ToLua.PushObject(L, o);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 1;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int Init(IntPtr L)
    {
        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.Init");
#endif
            ToLua.CheckArgsCount(L, 5);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)ToLua.CheckObject(L, 1, typeof(IflytekVoiceHelper));
            string arg0 = ToLua.CheckString(L, 2);
            string arg1 = ToLua.CheckString(L, 3);
            string arg2 = ToLua.CheckString(L, 4);
            string arg3 = ToLua.CheckString(L, 5);
            obj.Init(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 0;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int VoiceSetPath(IntPtr L)
    {
        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.VoiceSetPath");
#endif
            ToLua.CheckArgsCount(L, 2);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)ToLua.CheckObject(L, 1, typeof(IflytekVoiceHelper));
            string arg0 = ToLua.CheckString(L, 2);
            obj.VoiceSetPath(arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 0;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int GetDevices(IntPtr L)
    {
        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.GetDevices");
#endif
            ToLua.CheckArgsCount(L, 1);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)ToLua.CheckObject(L, 1, typeof(IflytekVoiceHelper));
            string[] o = obj.GetDevices();
            ToLua.Push(L, o);
            int arrayLength = o.Length;
            LuaScriptMgr.Push(L, arrayLength);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 2;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int VoiceStart(IntPtr L)
    {
        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.VoiceStart");
#endif
            int count = LuaDLL.lua_gettop(L);

            if (count == 3)
            {
                IflytekVoiceHelper obj = (IflytekVoiceHelper)ToLua.CheckObject(L, 1, typeof(IflytekVoiceHelper));
                LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
                LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
                obj.VoiceStart(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
                //UIProfiler.End();
#endif
                return 0;
            }
            else if (count == 4)
            {
                IflytekVoiceHelper obj = (IflytekVoiceHelper)ToLua.CheckObject(L, 1, typeof(IflytekVoiceHelper));
                LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
                LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
                string arg2 = ToLua.CheckString(L, 4);
                obj.VoiceStart(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
                //UIProfiler.End();
#endif
                return 0;
            }
            else
            {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
                //UIProfiler.End();
#endif
                return LuaDLL.luaL_throw(L, "invalid arguments to method: IflytekVoiceHelper.VoiceStart");
            }
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int Reset(IntPtr L)
    {
        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.Reset");
#endif
            ToLua.CheckArgsCount(L, 1);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)ToLua.CheckObject(L, 1, typeof(IflytekVoiceHelper));
            obj.Reset();
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 0;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int VoiceStop(IntPtr L)
    {
        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.VoiceStop");
#endif
            ToLua.CheckArgsCount(L, 1);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)ToLua.CheckObject(L, 1, typeof(IflytekVoiceHelper));
            obj.VoiceStop();
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 0;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int Lua_ToString(IntPtr L)
    {
        object obj = ToLua.ToObject(L, 1);

        if (obj != null)
        {
            LuaDLL.lua_pushstring(L, obj.ToString());
        }
        else
        {
            LuaDLL.lua_pushnil(L);
        }

        return 1;
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int get_Frequency(IntPtr L)
    {
        object o = null;

        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.Frequency");
#endif
            o = ToLua.ToObject(L, 1);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)o;
            int ret = obj.Frequency;
            LuaDLL.lua_pushinteger(L, ret);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 1;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Frequency on a nil value" : e.Message);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int get_RecordTime(IntPtr L)
    {
        object o = null;

        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.RecordTime");
#endif
            o = ToLua.ToObject(L, 1);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)o;
            int ret = obj.RecordTime;
            LuaDLL.lua_pushinteger(L, ret);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 1;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RecordTime on a nil value" : e.Message);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int get_IsRecording(IntPtr L)
    {
        object o = null;

        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.IsRecording");
#endif
            o = ToLua.ToObject(L, 1);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)o;
            bool ret = obj.IsRecording;
            LuaDLL.lua_pushboolean(L, ret);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 1;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsRecording on a nil value" : e.Message);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int get_EnterRecord(IntPtr L)
    {
        object o = null;

        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.EnterRecord");
#endif
            o = ToLua.ToObject(L, 1);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)o;
            bool ret = obj.EnterRecord;
            LuaDLL.lua_pushboolean(L, ret);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 1;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EnterRecord on a nil value" : e.Message);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int set_Frequency(IntPtr L)
    {
        object o = null;

        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.Frequency");
#endif
            o = ToLua.ToObject(L, 1);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)o;
            int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
            obj.Frequency = arg0;
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 0;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Frequency on a nil value" : e.Message);
        }
    }

    [MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
    static int set_RecordTime(IntPtr L)
    {
        object o = null;

        try
        {
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.Begin("IflytekVoiceHelper.RecordTime");
#endif
            o = ToLua.ToObject(L, 1);
            IflytekVoiceHelper obj = (IflytekVoiceHelper)o;
            int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
            obj.RecordTime = arg0;
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
            //UIProfiler.End();
#endif
            return 0;
        }
        catch (Exception e)
        {
            return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RecordTime on a nil value" : e.Message);
        }
    }
}

