//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class TMPro_TMP_Dropdown_OptionDataListWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(TMPro.TMP_Dropdown.OptionDataList), typeof(System.Object), "OptionDataList");
		L.RegFunction("New", _CreateTMPro_TMP_Dropdown_OptionDataList);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("options", get_options, set_options);
		L.RegFunction("GetClassType", GetClassType);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateTMPro_TMP_Dropdown_OptionDataList(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				TMPro.TMP_Dropdown.OptionDataList obj = new TMPro.TMP_Dropdown.OptionDataList();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: TMPro.TMP_Dropdown.OptionDataList.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	static Type classType = typeof(TMPro.TMP_Dropdown.OptionDataList);

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetClassType(IntPtr L)
	{
		ToLua.Push(L, classType);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_options(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TMPro.TMP_Dropdown.OptionDataList obj = (TMPro.TMP_Dropdown.OptionDataList)o;
			System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData> ret = obj.options;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index options on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_options(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TMPro.TMP_Dropdown.OptionDataList obj = (TMPro.TMP_Dropdown.OptionDataList)o;
			System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData> arg0 = (System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData>));
			obj.options = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index options on a nil value" : e.Message);
		}
	}
}

