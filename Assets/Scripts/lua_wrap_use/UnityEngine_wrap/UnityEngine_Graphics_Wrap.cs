//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_GraphicsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Graphics), typeof(System.Object), "Graphics");
		L.RegFunction("ClearRandomWriteTargets", ClearRandomWriteTargets);
		L.RegFunction("ExecuteCommandBuffer", ExecuteCommandBuffer);
		L.RegFunction("ExecuteCommandBufferAsync", ExecuteCommandBufferAsync);
		L.RegFunction("SetRenderTarget", SetRenderTarget);
		L.RegFunction("SetRandomWriteTarget", SetRandomWriteTarget);
		L.RegFunction("CopyTexture", CopyTexture);
		L.RegFunction("ConvertTexture", ConvertTexture);
		L.RegFunction("CreateAsyncGraphicsFence", CreateAsyncGraphicsFence);
		L.RegFunction("CreateGraphicsFence", CreateGraphicsFence);
		L.RegFunction("WaitOnAsyncGraphicsFence", WaitOnAsyncGraphicsFence);
		L.RegFunction("CopyBuffer", CopyBuffer);
		L.RegFunction("DrawTexture", DrawTexture);
		L.RegFunction("RenderMesh", RenderMesh);
		L.RegFunction("RenderMeshIndirect", RenderMeshIndirect);
		L.RegFunction("RenderMeshPrimitives", RenderMeshPrimitives);
		L.RegFunction("RenderPrimitives", RenderPrimitives);
		L.RegFunction("RenderPrimitivesIndexed", RenderPrimitivesIndexed);
		L.RegFunction("RenderPrimitivesIndirect", RenderPrimitivesIndirect);
		L.RegFunction("RenderPrimitivesIndexedIndirect", RenderPrimitivesIndexedIndirect);
		L.RegFunction("DrawMeshNow", DrawMeshNow);
		L.RegFunction("DrawMesh", DrawMesh);
		L.RegFunction("DrawMeshInstanced", DrawMeshInstanced);
		L.RegFunction("DrawMeshInstancedProcedural", DrawMeshInstancedProcedural);
		L.RegFunction("DrawMeshInstancedIndirect", DrawMeshInstancedIndirect);
		L.RegFunction("DrawProceduralNow", DrawProceduralNow);
		L.RegFunction("DrawProceduralIndirectNow", DrawProceduralIndirectNow);
		L.RegFunction("DrawProcedural", DrawProcedural);
		L.RegFunction("DrawProceduralIndirect", DrawProceduralIndirect);
		L.RegFunction("Blit", Blit);
		L.RegFunction("BlitMultiTap", BlitMultiTap);
		L.RegFunction("New", _CreateUnityEngine_Graphics);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("activeColorGamut", get_activeColorGamut, null);
		L.RegVar("activeTier", get_activeTier, set_activeTier);
		L.RegVar("preserveFramebufferAlpha", get_preserveFramebufferAlpha, null);
		L.RegVar("minOpenGLESVersion", get_minOpenGLESVersion, null);
		L.RegVar("activeColorBuffer", get_activeColorBuffer, null);
		L.RegVar("activeDepthBuffer", get_activeDepthBuffer, null);
		L.RegFunction("GetClassType", GetClassType);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Graphics(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Graphics obj = new UnityEngine.Graphics();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Graphics.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	static Type classType = typeof(UnityEngine.Graphics);

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetClassType(IntPtr L)
	{
		ToLua.Push(L, classType);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearRandomWriteTargets(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.ClearRandomWriteTargets");
#endif
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.Graphics.ClearRandomWriteTargets();
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExecuteCommandBuffer(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.ExecuteCommandBuffer");
#endif
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Rendering.CommandBuffer arg0 = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.CommandBuffer));
			UnityEngine.Graphics.ExecuteCommandBuffer(arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExecuteCommandBufferAsync(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.ExecuteCommandBufferAsync");
#endif
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Rendering.CommandBuffer arg0 = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.CommandBuffer));
			UnityEngine.Rendering.ComputeQueueType arg1 = (UnityEngine.Rendering.ComputeQueueType)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Graphics.ExecuteCommandBufferAsync(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRenderTarget(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.SetRenderTarget");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderTargetSetup)))
			{
				UnityEngine.RenderTargetSetup arg0 = StackTraits<UnityEngine.RenderTargetSetup>.To(L, 1);
				UnityEngine.Graphics.SetRenderTarget(arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderTexture)))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				UnityEngine.Graphics.SetRenderTarget(arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderBuffer[]), typeof(UnityEngine.RenderBuffer)))
			{
				UnityEngine.RenderBuffer[] arg0 = ToLua.CheckObjectArray<UnityEngine.RenderBuffer>(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.To(L, 2);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderTexture), typeof(int)))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderBuffer), typeof(UnityEngine.RenderBuffer)))
			{
				UnityEngine.RenderBuffer arg0 = StackTraits<UnityEngine.RenderBuffer>.To(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.To(L, 2);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderTexture), typeof(int), typeof(UnityEngine.CubemapFace)))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.CubemapFace arg2 = (UnityEngine.CubemapFace)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderBuffer), typeof(UnityEngine.RenderBuffer), typeof(int)))
			{
				UnityEngine.RenderBuffer arg0 = StackTraits<UnityEngine.RenderBuffer>.To(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.To(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderTexture), typeof(int), typeof(UnityEngine.CubemapFace), typeof(int)))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.CubemapFace arg2 = (UnityEngine.CubemapFace)LuaDLL.luaL_checknumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderBuffer), typeof(UnityEngine.RenderBuffer), typeof(int), typeof(UnityEngine.CubemapFace)))
			{
				UnityEngine.RenderBuffer arg0 = StackTraits<UnityEngine.RenderBuffer>.To(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.To(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.CubemapFace arg3 = (UnityEngine.CubemapFace)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 5)
			{
				UnityEngine.RenderBuffer arg0 = StackTraits<UnityEngine.RenderBuffer>.Check(L, 1);
				UnityEngine.RenderBuffer arg1 = StackTraits<UnityEngine.RenderBuffer>.Check(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.CubemapFace arg3 = (UnityEngine.CubemapFace)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2, arg3, arg4);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.SetRenderTarget");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRandomWriteTarget(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.SetRandomWriteTarget");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.RenderTexture)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.ComputeBuffer)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.GraphicsBuffer)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.ComputeBuffer), typeof(bool)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.GraphicsBuffer), typeof(bool)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.SetRandomWriteTarget");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CopyTexture(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.CopyTexture");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture));
				UnityEngine.Graphics.CopyTexture(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Texture arg2 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Texture));
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.CopyTexture(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 6)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.Texture arg3 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 4, typeof(UnityEngine.Texture));
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Graphics.CopyTexture(arg0, arg1, arg2, arg3, arg4, arg5);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 12)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				int arg6 = (int)LuaDLL.luaL_checknumber(L, 7);
				UnityEngine.Texture arg7 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 8, typeof(UnityEngine.Texture));
				int arg8 = (int)LuaDLL.luaL_checknumber(L, 9);
				int arg9 = (int)LuaDLL.luaL_checknumber(L, 10);
				int arg10 = (int)LuaDLL.luaL_checknumber(L, 11);
				int arg11 = (int)LuaDLL.luaL_checknumber(L, 12);
				UnityEngine.Graphics.CopyTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.CopyTexture");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConvertTexture(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.ConvertTexture");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture));
				bool o = UnityEngine.Graphics.ConvertTexture(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 1;
			}
			else if (count == 4)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Texture arg2 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Texture));
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				bool o = UnityEngine.Graphics.ConvertTexture(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushboolean(L, o);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 1;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.ConvertTexture");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateAsyncGraphicsFence(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.CreateAsyncGraphicsFence");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Rendering.GraphicsFence o = UnityEngine.Graphics.CreateAsyncGraphicsFence();
				ToLua.PushValue(L, o);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 1;
			}
			else if (count == 1)
			{
				UnityEngine.Rendering.SynchronisationStage arg0 = (UnityEngine.Rendering.SynchronisationStage)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Rendering.GraphicsFence o = UnityEngine.Graphics.CreateAsyncGraphicsFence(arg0);
				ToLua.PushValue(L, o);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 1;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.CreateAsyncGraphicsFence");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateGraphicsFence(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.CreateGraphicsFence");
#endif
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Rendering.GraphicsFenceType arg0 = (UnityEngine.Rendering.GraphicsFenceType)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.Rendering.SynchronisationStageFlags arg1 = (UnityEngine.Rendering.SynchronisationStageFlags)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Rendering.GraphicsFence o = UnityEngine.Graphics.CreateGraphicsFence(arg0, arg1);
			ToLua.PushValue(L, o);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WaitOnAsyncGraphicsFence(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.WaitOnAsyncGraphicsFence");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityEngine.Rendering.GraphicsFence arg0 = StackTraits<UnityEngine.Rendering.GraphicsFence>.Check(L, 1);
				UnityEngine.Graphics.WaitOnAsyncGraphicsFence(arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 2)
			{
				UnityEngine.Rendering.GraphicsFence arg0 = StackTraits<UnityEngine.Rendering.GraphicsFence>.Check(L, 1);
				UnityEngine.Rendering.SynchronisationStage arg1 = (UnityEngine.Rendering.SynchronisationStage)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Graphics.WaitOnAsyncGraphicsFence(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.WaitOnAsyncGraphicsFence");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CopyBuffer(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.CopyBuffer");
#endif
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.GraphicsBuffer arg0 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.GraphicsBuffer));
			UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 2, typeof(UnityEngine.GraphicsBuffer));
			UnityEngine.Graphics.CopyBuffer(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawTexture(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawTexture");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture));
				UnityEngine.Graphics.DrawTexture(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture));
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Material));
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture));
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Material));
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 6)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture));
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Rect), typeof(int), typeof(int), typeof(int), typeof(int)))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.To(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.To(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.To(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Material arg6 = (UnityEngine.Material)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.To(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Material arg6 = (UnityEngine.Material)ToLua.ToObject(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Rect), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Color)))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.To(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.To(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Color arg7 = ToLua.ToColor(L, 8);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Rect), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.To(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.To(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Material arg7 = (UnityEngine.Material)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Rect), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.To(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.To(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Material arg7 = (UnityEngine.Material)ToLua.ToObject(L, 8);
				int arg8 = (int)LuaDLL.lua_tonumber(L, 9);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Rect), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Color), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.To(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.To(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Color arg7 = ToLua.ToColor(L, 8);
				UnityEngine.Material arg8 = (UnityEngine.Material)ToLua.ToObject(L, 9);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 10)
			{
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Texture));
				UnityEngine.Rect arg2 = StackTraits<UnityEngine.Rect>.Check(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				int arg6 = (int)LuaDLL.luaL_checknumber(L, 7);
				UnityEngine.Color arg7 = ToLua.ToColor(L, 8);
				UnityEngine.Material arg8 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 9, typeof(UnityEngine.Material));
				int arg9 = (int)LuaDLL.luaL_checknumber(L, 10);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawTexture");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RenderMesh(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.RenderMesh");
#endif
			ToLua.CheckArgsCount(L, 5);
			UnityEngine.RenderParams arg0 = StackTraits<UnityEngine.RenderParams>.Check(L, 1);
			UnityEngine.Mesh arg1 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Mesh));
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Matrix4x4 arg3 = StackTraits<UnityEngine.Matrix4x4>.Check(L, 4);
			System.Nullable<UnityEngine.Matrix4x4> arg4 = StackTraits<System.Nullable<UnityEngine.Matrix4x4>>.Check(L, 5);
			UnityEngine.Graphics.RenderMesh(in arg0, arg1, arg2, arg3, arg4);
			ToLua.PushValue(L, arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RenderMeshIndirect(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.RenderMeshIndirect");
#endif
			ToLua.CheckArgsCount(L, 5);
			UnityEngine.RenderParams arg0 = StackTraits<UnityEngine.RenderParams>.Check(L, 1);
			UnityEngine.Mesh arg1 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Mesh));
			UnityEngine.GraphicsBuffer arg2 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 3, typeof(UnityEngine.GraphicsBuffer));
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
			UnityEngine.Graphics.RenderMeshIndirect(in arg0, arg1, arg2, arg3, arg4);
			ToLua.PushValue(L, arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RenderMeshPrimitives(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.RenderMeshPrimitives");
#endif
			ToLua.CheckArgsCount(L, 4);
			UnityEngine.RenderParams arg0 = StackTraits<UnityEngine.RenderParams>.Check(L, 1);
			UnityEngine.Mesh arg1 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Mesh));
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Graphics.RenderMeshPrimitives(in arg0, arg1, arg2, arg3);
			ToLua.PushValue(L, arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RenderPrimitives(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.RenderPrimitives");
#endif
			ToLua.CheckArgsCount(L, 4);
			UnityEngine.RenderParams arg0 = StackTraits<UnityEngine.RenderParams>.Check(L, 1);
			UnityEngine.MeshTopology arg1 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Graphics.RenderPrimitives(in arg0, arg1, arg2, arg3);
			ToLua.PushValue(L, arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RenderPrimitivesIndexed(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.RenderPrimitivesIndexed");
#endif
			ToLua.CheckArgsCount(L, 6);
			UnityEngine.RenderParams arg0 = StackTraits<UnityEngine.RenderParams>.Check(L, 1);
			UnityEngine.MeshTopology arg1 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.GraphicsBuffer arg2 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 3, typeof(UnityEngine.GraphicsBuffer));
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
			int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
			UnityEngine.Graphics.RenderPrimitivesIndexed(in arg0, arg1, arg2, arg3, arg4, arg5);
			ToLua.PushValue(L, arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RenderPrimitivesIndirect(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.RenderPrimitivesIndirect");
#endif
			ToLua.CheckArgsCount(L, 5);
			UnityEngine.RenderParams arg0 = StackTraits<UnityEngine.RenderParams>.Check(L, 1);
			UnityEngine.MeshTopology arg1 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.GraphicsBuffer arg2 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 3, typeof(UnityEngine.GraphicsBuffer));
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
			UnityEngine.Graphics.RenderPrimitivesIndirect(in arg0, arg1, arg2, arg3, arg4);
			ToLua.PushValue(L, arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RenderPrimitivesIndexedIndirect(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.RenderPrimitivesIndexedIndirect");
#endif
			ToLua.CheckArgsCount(L, 6);
			UnityEngine.RenderParams arg0 = StackTraits<UnityEngine.RenderParams>.Check(L, 1);
			UnityEngine.MeshTopology arg1 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.GraphicsBuffer arg2 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 3, typeof(UnityEngine.GraphicsBuffer));
			UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 4, typeof(UnityEngine.GraphicsBuffer));
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
			int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
			UnityEngine.Graphics.RenderPrimitivesIndexedIndirect(in arg0, arg1, arg2, arg3, arg4, arg5);
			ToLua.PushValue(L, arg0);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMeshNow(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawMeshNow");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.Check(L, 2);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMeshNow");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMesh(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawMesh");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.Check(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Material));
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool), typeof(bool), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(UnityEngine.Transform)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Transform arg9 = (UnityEngine.Transform)ToLua.ToObject(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool), typeof(bool), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				bool arg10 = LuaDLL.lua_toboolean(L, 11);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(UnityEngine.Transform), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Transform arg9 = (UnityEngine.Transform)ToLua.ToObject(L, 10);
				bool arg10 = LuaDLL.lua_toboolean(L, 11);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(UnityEngine.Transform)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Transform arg10 = (UnityEngine.Transform)ToLua.ToObject(L, 11);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(UnityEngine.Transform), typeof(UnityEngine.Rendering.LightProbeUsage)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Transform arg9 = (UnityEngine.Transform)ToLua.ToObject(L, 10);
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 11);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 12 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(UnityEngine.Transform), typeof(UnityEngine.Rendering.LightProbeUsage), typeof(UnityEngine.LightProbeProxyVolume)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = StackTraits<UnityEngine.Matrix4x4>.To(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Transform arg9 = (UnityEngine.Transform)ToLua.ToObject(L, 10);
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 11);
				UnityEngine.LightProbeProxyVolume arg11 = (UnityEngine.LightProbeProxyVolume)ToLua.ToObject(L, 12);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 12 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(UnityEngine.Transform), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Transform arg10 = (UnityEngine.Transform)ToLua.ToObject(L, 11);
				bool arg11 = LuaDLL.lua_toboolean(L, 12);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMesh");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMeshInstanced(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawMeshInstanced");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Matrix4x4[])))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckObjectArray<UnityEngine.Matrix4x4>(L, 4);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(System.Collections.Generic.List<UnityEngine.Matrix4x4>)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Matrix4x4[]), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckObjectArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(System.Collections.Generic.List<UnityEngine.Matrix4x4>), typeof(UnityEngine.MaterialPropertyBlock)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Matrix4x4[]), typeof(int), typeof(UnityEngine.MaterialPropertyBlock)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckObjectArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(System.Collections.Generic.List<UnityEngine.Matrix4x4>), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Matrix4x4[]), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckObjectArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 7);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(System.Collections.Generic.List<UnityEngine.Matrix4x4>), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(System.Collections.Generic.List<UnityEngine.Matrix4x4>), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Matrix4x4[]), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckObjectArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Matrix4x4[]), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckObjectArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				int arg8 = (int)LuaDLL.lua_tonumber(L, 9);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(System.Collections.Generic.List<UnityEngine.Matrix4x4>), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int), typeof(UnityEngine.Camera)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Camera arg8 = (UnityEngine.Camera)ToLua.ToObject(L, 9);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Matrix4x4[]), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int), typeof(UnityEngine.Camera)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckObjectArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				int arg8 = (int)LuaDLL.lua_tonumber(L, 9);
				UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.ToObject(L, 10);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(System.Collections.Generic.List<UnityEngine.Matrix4x4>), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.Rendering.LightProbeUsage)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Camera arg8 = (UnityEngine.Camera)ToLua.ToObject(L, 9);
				UnityEngine.Rendering.LightProbeUsage arg9 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 10);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(System.Collections.Generic.List<UnityEngine.Matrix4x4>), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.Rendering.LightProbeUsage), typeof(UnityEngine.LightProbeProxyVolume)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				System.Collections.Generic.List<UnityEngine.Matrix4x4> arg3 = (System.Collections.Generic.List<UnityEngine.Matrix4x4>)ToLua.ToObject(L, 4);
				UnityEngine.MaterialPropertyBlock arg4 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 5);
				UnityEngine.Rendering.ShadowCastingMode arg5 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 6);
				bool arg6 = LuaDLL.lua_toboolean(L, 7);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 8);
				UnityEngine.Camera arg8 = (UnityEngine.Camera)ToLua.ToObject(L, 9);
				UnityEngine.Rendering.LightProbeUsage arg9 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 10);
				UnityEngine.LightProbeProxyVolume arg10 = (UnityEngine.LightProbeProxyVolume)ToLua.ToObject(L, 11);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Matrix4x4[]), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.Rendering.LightProbeUsage)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckObjectArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 6);
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				int arg8 = (int)LuaDLL.lua_tonumber(L, 9);
				UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.ToObject(L, 10);
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 11);
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 12)
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Mesh));
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Material));
				UnityEngine.Matrix4x4[] arg3 = ToLua.CheckObjectArray<UnityEngine.Matrix4x4>(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 7);
				bool arg7 = LuaDLL.luaL_checkboolean(L, 8);
				int arg8 = (int)LuaDLL.luaL_checknumber(L, 9);
				UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.CheckUnityObject(L, 10, typeof(UnityEngine.Camera));
				UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 11);
				UnityEngine.LightProbeProxyVolume arg11 = (UnityEngine.LightProbeProxyVolume)ToLua.CheckUnityObject(L, 12, typeof(UnityEngine.LightProbeProxyVolume));
				UnityEngine.Graphics.DrawMeshInstanced(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMeshInstanced");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMeshInstancedProcedural(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawMeshInstancedProcedural");
#endif
			ToLua.CheckArgsCount(L, 12);
			UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Mesh));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Material));
			UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
			int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
			UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 6, typeof(UnityEngine.MaterialPropertyBlock));
			UnityEngine.Rendering.ShadowCastingMode arg6 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 7);
			bool arg7 = LuaDLL.luaL_checkboolean(L, 8);
			int arg8 = (int)LuaDLL.luaL_checknumber(L, 9);
			UnityEngine.Camera arg9 = (UnityEngine.Camera)ToLua.CheckUnityObject(L, 10, typeof(UnityEngine.Camera));
			UnityEngine.Rendering.LightProbeUsage arg10 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 11);
			UnityEngine.LightProbeProxyVolume arg11 = (UnityEngine.LightProbeProxyVolume)ToLua.CheckUnityObject(L, 12, typeof(UnityEngine.LightProbeProxyVolume));
			UnityEngine.Graphics.DrawMeshInstancedProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMeshInstancedIndirect(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawMeshInstancedIndirect");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 12 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Bounds), typeof(UnityEngine.ComputeBuffer), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.Rendering.LightProbeUsage)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				int arg9 = (int)LuaDLL.lua_tonumber(L, 10);
				UnityEngine.Camera arg10 = (UnityEngine.Camera)ToLua.ToObject(L, 11);
				UnityEngine.Rendering.LightProbeUsage arg11 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 12);
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 12 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Bounds), typeof(UnityEngine.GraphicsBuffer), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.Rendering.LightProbeUsage)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.GraphicsBuffer arg4 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				int arg9 = (int)LuaDLL.lua_tonumber(L, 10);
				UnityEngine.Camera arg10 = (UnityEngine.Camera)ToLua.ToObject(L, 11);
				UnityEngine.Rendering.LightProbeUsage arg11 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 12);
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 13 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Bounds), typeof(UnityEngine.ComputeBuffer), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.Rendering.LightProbeUsage), typeof(UnityEngine.LightProbeProxyVolume)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				int arg9 = (int)LuaDLL.lua_tonumber(L, 10);
				UnityEngine.Camera arg10 = (UnityEngine.Camera)ToLua.ToObject(L, 11);
				UnityEngine.Rendering.LightProbeUsage arg11 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 12);
				UnityEngine.LightProbeProxyVolume arg12 = (UnityEngine.LightProbeProxyVolume)ToLua.ToObject(L, 13);
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 13 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(int), typeof(UnityEngine.Material), typeof(UnityEngine.Bounds), typeof(UnityEngine.GraphicsBuffer), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.Rendering.LightProbeUsage), typeof(UnityEngine.LightProbeProxyVolume)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Bounds arg3 = ToLua.ToBounds(L, 4);
				UnityEngine.GraphicsBuffer arg4 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				int arg9 = (int)LuaDLL.lua_tonumber(L, 10);
				UnityEngine.Camera arg10 = (UnityEngine.Camera)ToLua.ToObject(L, 11);
				UnityEngine.Rendering.LightProbeUsage arg11 = (UnityEngine.Rendering.LightProbeUsage)LuaDLL.luaL_checknumber(L, 12);
				UnityEngine.LightProbeProxyVolume arg12 = (UnityEngine.LightProbeProxyVolume)ToLua.ToObject(L, 13);
				UnityEngine.Graphics.DrawMeshInstancedIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMeshInstancedIndirect");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProceduralNow(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawProceduralNow");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.Graphics.DrawProceduralNow(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 2, typeof(UnityEngine.GraphicsBuffer));
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Graphics.DrawProceduralNow(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProceduralNow");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProceduralIndirectNow(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawProceduralIndirectNow");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.MeshTopology), typeof(UnityEngine.ComputeBuffer), typeof(int)))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawProceduralIndirectNow(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.MeshTopology), typeof(UnityEngine.GraphicsBuffer), typeof(int)))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawProceduralIndirectNow(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.MeshTopology), typeof(UnityEngine.GraphicsBuffer), typeof(UnityEngine.ComputeBuffer), typeof(int)))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 2);
				UnityEngine.ComputeBuffer arg2 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.DrawProceduralIndirectNow(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.MeshTopology), typeof(UnityEngine.GraphicsBuffer), typeof(UnityEngine.GraphicsBuffer), typeof(int)))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.GraphicsBuffer arg1 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 2);
				UnityEngine.GraphicsBuffer arg2 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.DrawProceduralIndirectNow(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProceduralIndirectNow");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProcedural(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawProcedural");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 10)
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Material));
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.CheckUnityObject(L, 6, typeof(UnityEngine.Camera));
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 7, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.luaL_checkboolean(L, 9);
				int arg9 = (int)LuaDLL.luaL_checknumber(L, 10);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 11)
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Material));
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.CheckObject(L, 4, typeof(UnityEngine.GraphicsBuffer));
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.CheckUnityObject(L, 7, typeof(UnityEngine.Camera));
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject(L, 8, typeof(UnityEngine.MaterialPropertyBlock));
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 9);
				bool arg9 = LuaDLL.luaL_checkboolean(L, 10);
				int arg10 = (int)LuaDLL.luaL_checknumber(L, 11);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProcedural");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProceduralIndirect(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.DrawProceduralIndirect");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Material), typeof(UnityEngine.Bounds), typeof(UnityEngine.MeshTopology), typeof(UnityEngine.ComputeBuffer), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int)))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.ToObject(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.ComputeBuffer arg3 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				int arg9 = (int)LuaDLL.lua_tonumber(L, 10);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Material), typeof(UnityEngine.Bounds), typeof(UnityEngine.MeshTopology), typeof(UnityEngine.GraphicsBuffer), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int)))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.ToObject(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				int arg9 = (int)LuaDLL.lua_tonumber(L, 10);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Material), typeof(UnityEngine.Bounds), typeof(UnityEngine.MeshTopology), typeof(UnityEngine.GraphicsBuffer), typeof(UnityEngine.ComputeBuffer), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int)))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.ToObject(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				int arg10 = (int)LuaDLL.lua_tonumber(L, 11);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Material), typeof(UnityEngine.Bounds), typeof(UnityEngine.MeshTopology), typeof(UnityEngine.GraphicsBuffer), typeof(UnityEngine.GraphicsBuffer), typeof(int), typeof(UnityEngine.Camera), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(int)))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.ToObject(L, 1);
				UnityEngine.Bounds arg1 = ToLua.ToBounds(L, 2);
				UnityEngine.MeshTopology arg2 = (UnityEngine.MeshTopology)LuaDLL.luaL_checknumber(L, 3);
				UnityEngine.GraphicsBuffer arg3 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 4);
				UnityEngine.GraphicsBuffer arg4 = (UnityEngine.GraphicsBuffer)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Camera arg6 = (UnityEngine.Camera)ToLua.ToObject(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)LuaDLL.luaL_checknumber(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				int arg10 = (int)LuaDLL.lua_tonumber(L, 11);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProceduralIndirect");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Blit(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.Blit");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.RenderTexture)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.Blit(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.Material)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.Blit(arg0, arg1);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.RenderTexture), typeof(UnityEngine.Material)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.RenderTexture), typeof(int), typeof(int)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.RenderTexture), typeof(UnityEngine.Vector2), typeof(UnityEngine.Vector2)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 3);
				UnityEngine.Vector2 arg3 = ToLua.ToVector2(L, 4);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.RenderTexture), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.Material), typeof(int), typeof(int)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 5)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.RenderTexture));
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Material));
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3, arg4);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 6)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.RenderTexture));
				UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 3);
				UnityEngine.Vector2 arg3 = ToLua.ToVector2(L, 4);
				int arg4 = (int)LuaDLL.luaL_checknumber(L, 5);
				int arg5 = (int)LuaDLL.luaL_checknumber(L, 6);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3, arg4, arg5);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.Blit");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BlitMultiTap(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.BlitMultiTap");
#endif
			int count = LuaDLL.lua_gettop(L);

			if (count == 5)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.RenderTexture));
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Material));
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				UnityEngine.Vector2[] arg4 = ToLua.CheckParamsObject<UnityEngine.Vector2>(L, 5, count - 4);
				UnityEngine.Graphics.BlitMultiTap(arg0, arg1, arg2, arg3, arg4);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.RenderTexture));
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Material));
				UnityEngine.Vector2[] arg3 = ToLua.CheckParamsObject<UnityEngine.Vector2>(L, 4, count - 3);
				UnityEngine.Graphics.BlitMultiTap(arg0, arg1, arg2, arg3);
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
				//UIProfiler.End();
#endif
				return 0;
			}
			else
			{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.BlitMultiTap");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeColorGamut(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Graphics.activeColorGamut);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeTier(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Graphics.activeTier);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_preserveFramebufferAlpha(IntPtr L)
	{
		LuaDLL.lua_pushboolean(L, UnityEngine.Graphics.preserveFramebufferAlpha);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_minOpenGLESVersion(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Graphics.minOpenGLESVersion);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeColorBuffer(IntPtr L)
	{
		ToLua.PushValue(L, UnityEngine.Graphics.activeColorBuffer);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeDepthBuffer(IntPtr L)
	{
		ToLua.PushValue(L, UnityEngine.Graphics.activeDepthBuffer);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_activeTier(IntPtr L)
	{
		try
		{
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.Begin("UnityEngine.Graphics.activeTier");
#endif
			UnityEngine.Rendering.GraphicsTier arg0 = (UnityEngine.Rendering.GraphicsTier)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Graphics.activeTier = arg0;
#if ENABLE_PROFILER || UNITY_EDITOR || UNITY_STANDALONE_WIN
			//UIProfiler.End();
#endif
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

